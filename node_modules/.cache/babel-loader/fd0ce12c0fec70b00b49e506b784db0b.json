{"ast":null,"code":"import _regeneratorRuntime from \"R:\\\\dapp\\\\DeSo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"R:\\\\dapp\\\\DeSo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"R:\\\\dapp\\\\DeSo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"R:\\\\dapp\\\\DeSo\\\\src\\\\components\\\\OpenAI.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nexport default function OpenAI() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      txt = _useState2[0],\n      setTxt = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI\n  });\n  var openai = new OpenAIApi(configuration);\n\n  var genres = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"requesting response\");\n              _context.next = 3;\n              return openai.createImage({\n                prompt: txt,\n                n: 1,\n                size: \"512x512\"\n              });\n\n            case 3:\n              res = _context.sent;\n              setUrl(res.data.data[0].url);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function genres() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const savef=()=>{\n  // saveAs(txt,\"AI generated\")\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"aimain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Hello! this is Marv here\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    className: \"text1\",\n    placeholder: \"Describe the image you want to generate\",\n    onChange: function onChange(e) {\n      setTxt(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"Submit\",\n    className: \"button\",\n    placeholder: \"submit\",\n    onClick: genres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), url.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"response\",\n    src: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: url,\n    download: \"AI generated\",\n    className: \"download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 84\n    }\n  }, \"Download image\")) : /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"prompt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }\n  }, \"Click Submit to get image\")));\n}","map":{"version":3,"sources":["R:/dapp/DeSo/src/components/OpenAI.js"],"names":["React","useState","Configuration","OpenAIApi","OpenAI","txt","setTxt","url","setUrl","configuration","apiKey","process","env","REACT_APP_OPENAI","openai","genres","console","log","createImage","prompt","n","size","res","data","e","target","value","length"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA,kBAEXH,QAAQ,CAAC,EAAD,CAFG;AAAA;AAAA,MAExBI,GAFwB;AAAA,MAEnBC,MAFmB;;AAAA,mBAGXL,QAAQ,CAAC,EAAD,CAHG;AAAA;AAAA,MAGxBM,GAHwB;AAAA,MAGnBC,MAHmB;;AAI/B,MAAMC,aAAa,GAAG,IAAIP,aAAJ,CAAkB;AACtCQ,IAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADkB,GAAlB,CAAtB;AAIA,MAAMC,MAAM,GAAC,IAAIX,SAAJ,CAAcM,aAAd,CAAb;;AAEA,MAAMM,MAAM;AAAA,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADY;AAAA,qBAGQH,MAAM,CAACI,WAAP,CAAmB;AACnCC,gBAAAA,MAAM,EAAEd,GAD2B;AAEnCe,gBAAAA,CAAC,EAAE,CAFgC;AAGnCC,gBAAAA,IAAI,EAAE;AAH6B,eAAnB,CAHR;;AAAA;AAGJC,cAAAA,GAHI;AASVd,cAAAA,MAAM,CAACc,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBhB,GAAlB,CAAN;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAANQ,MAAM;AAAA;AAAA;AAAA,KAAZ,CAV+B,CAsB7B;AACA;AAEA;;;AAEA,sBACE,uDACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFA,eAGA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAC,OAAjC;AAAyC,IAAA,WAAW,EAAC,yCAArD;AAA+F,IAAA,QAAQ,EAAE,kBAACS,CAAD,EAAK;AAAClB,MAAAA,MAAM,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AAAuB,KAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAwC,IAAA,WAAW,EAAC,QAApD;AAA6D,IAAA,OAAO,EAAEX,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAMCR,GAAG,CAACoB,MAAJ,GAAW,CAAX,gBAAa;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB;AAAK,IAAA,SAAS,EAAC,UAAf;AAA2B,IAAA,GAAG,EAAEpB,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,eAA+D;AAAG,IAAA,IAAI,EAAEA,GAAT;AAAc,IAAA,QAAQ,EAAC,cAAvB;AAAuC,IAAA,SAAS,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA/D,CAAb,gBAEP;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARM,CADA,CADF;AAiBH","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { Configuration, OpenAIApi } from 'openai';\r\n\r\n\r\nexport default function OpenAI() {\r\n    \r\n  const [txt, setTxt]=useState(\"\");\r\n  const [url, setUrl]=useState(\"\");\r\n  const configuration = new Configuration({\r\n    apiKey: process.env.REACT_APP_OPENAI,\r\n  });\r\n\r\n  const openai=new OpenAIApi(configuration);\r\n\r\n  const genres= async()=>{\r\n    console.log(\"requesting response\");\r\n    \r\n      const res = await openai.createImage({\r\n        prompt: txt,\r\n        n: 1,\r\n        size: \"512x512\",\r\n      });\r\n  \r\n      setUrl(res.data.data[0].url);\r\n    };\r\n\r\n    // const savef=()=>{\r\n    // saveAs(txt,\"AI generated\")\r\n\r\n    // }\r\n\r\n    return (\r\n      <>\r\n      <div className='aimain'>\r\n    \r\n      <h1 className='title'>Hello! this is Marv here</h1>\r\n      <input type=\"textarea\" className='text1' placeholder='Describe the image you want to generate' onChange={(e)=>{setTxt(e.target.value)}} />\r\n      <input type=\"Submit\" className=\"button\" placeholder='submit' onClick={genres}   />\r\n      \r\n      {url.length>0?<div className='imgres'><img className=\"response\"  src={url} /><a href={url} download=\"AI generated\"  className='download'>Download image</a>\r\n      </div>:\r\n<h2 className='prompt'>Click Submit to get image</h2>\r\n      }\r\n      \r\n      </div>\r\n      </>\r\n    );\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}